import React, { useState, useEffect } from "react";
import { Link } from "react-scroll";

import Footer from "../components/Footer";
import Modal from "../components/UIElements/Modal";

import "./MainPage.css"

const MainPage = () => {

    //HEADER//

    const [scrolled, setScrolled] = useState(false);

    useEffect(() => {
        const handleScroll = () => {
            if (window.scrollY > 400) {
                setScrolled(true);
            } else {
                setScrolled(false);
            }
        };

        window.addEventListener("scroll", handleScroll);
        return () => window.removeEventListener("scroll", handleScroll);
    }, []);



    //WORKS//
    const [showAllWorks, setShowAllWorks] = useState(false);

    // title has to be the same with first number in image file name
    const worksImages = [
        { title: "1", description: "–ì–ê–õ–° ¬´–¢–µ–∞—Ç—Ä–∞–ª—å–Ω—ã–π –î–æ–º¬ª" },
        { title: "2", description: "INSIGMA ¬´Red Side¬ª" },
        { title: "3", description: "INSIGMA ¬´–ò—Ç–∞–ª—å—è–Ω—Å–∫–∏–π –ö–≤–∞—Ä—Ç–∞–ª¬ª" },
        { title: "4", description: "–°–∞–≤–≤–∏–Ω–æ - –°—Ç–æ—Ä–æ–∂–µ–≤—Å–∫–∏–π –º–æ–Ω–∞—Å—Ç—ã—Ä—å" },
        { title: "5", description: "–ú–ê–ì–ò–°–¢–†–ê–¢ ¬´West Side¬ª" },
        { title: "6", description: "BARKLI ¬´Barkli Residence¬ª" },
        { title: "9", description: "–†–µ–∑–∏–¥–µ–Ω—Ü–∏—è –ø—Ä–µ–∑–∏–¥–µ–Ω—Ç–∞, –≥.–ú–∏–Ω—Å–∫" },
        { title: "13", description: "–ë–ò–ü–õ–ê–ù –ú –ò–Ω—Ç–µ—Ä—å–µ—Ä" },
        { title: "19", description: "–ì–û–†–ù ¬´–ù–µ—Å–∫—É—á–Ω—ã–π Home & Spa¬ª" },
        { title: "20", description: "–ó–∞–≥–æ—Ä–æ–¥–Ω—ã–π –¥–æ–º" }
    ];

    //MODAL//
    const [modalImage, setModalImage] = useState(false);
    const [images, setImages] = useState([]);

    const closeModalHandler = () => {
        setModalImage(false);
        setImages([]);
    };

    useEffect(() => {
        if (!modalImage) return;

        const found = [];
        let i = 1;

        const checkNext = () => {
            const testImg = new Image();
            testImg.src = `${import.meta.env.BASE_URL}images/gallery/${modalImage}_${i}.webp`;

            testImg.onload = () => {
                found.push(`${modalImage}_${i}`);
                i++;
                checkNext(); // keep checking next file
            };

            testImg.onerror = () => {
                setImages(found); // stop when file missing
            };
        };

        checkNext();
    }, [modalImage]);

    return (
        <>

            {/* HEADER */}
            <div className={scrolled ? "header scrolled" : "header"}>

                <div className={scrolled ? "logo scrolled" : "logo"}>
                    <Link to="home" smooth={true} duration={50}>
                        <img src={`${import.meta.env.BASE_URL}images/logo.svg`} alt="Delmaket logo" className="logo-img" />
                    </Link>
                </div>

                <div className={scrolled ? "links scrolled" : "links"}>
                    <Link to="works" smooth={true} duration={50}>–º–∞–∫–µ—Ç—ã</Link>
                    <Link to="contacts" smooth={true} duration={50}>–∫–æ–Ω—Ç–∞–∫—Ç—ã</Link>
                    <a href={`${import.meta.env.BASE_URL}#/en`} className="links-en-btn">üåêÔ∏é EN</a>
                    {/* <a href="#contacts" className="links-en-btn">üåêÔ∏é RU</a> */}
                </div>

            </div>

            {/* MAIN BACKGROUND IMG */}
            <div id="home" className="main-photo">
                <p>C –Ω–∞–º–∏ <br /> —É –í–∞—Å –≤—Å—ë <br /> –ø–æ–ª—É—á–∏—Ç—Å—è!</p>

                <img src={`${import.meta.env.BASE_URL}images/main.webp`} alt="photo" />
            </div>


            {/* INFO */}
            <div className="info">
                <div className="info-child">
                    <h3>
                        –ù–∞—à–µ–π –º–∞–∫–µ—Ç–Ω–æ–π –º–∞—Å—Ç–µ—Ä—Å–∫–æ–π –±–æ–ª–µ–µ 35 –ª–µ—Ç. –ú—ã –¥–µ–ª–∞–µ–º –º–∞–∫–µ—Ç—ã –ª—é–±–æ–π —Å–ª–æ–∂–Ω–æ—Å—Ç–∏.
                    </h3>
                    <div className="info-bullet-points">
                        <p>
                            ‚Ä¢ –ú–∞–∫–µ—Ç—ã –¥–ª—è –≤—ã—Å—Ç–∞–≤–æ–∫ <br />
                            ‚Ä¢ –ú–∞–∫–µ—Ç—ã —Å –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–º —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ–º <br />
                            ‚Ä¢ –†–∞–±–æ—á–∏–µ –º–∞–∫–µ—Ç—ã –¥–ª—è –∞—Ä—Ö–∏—Ç–µ–∫—Ç–æ—Ä–æ–≤ <br />
                        </p>
                        <p>
                            ‚Ä¢ –ì—Ä–∞–¥–æ—Å—Ç—Ä–æ–∏—Ç–µ–ª—å–Ω—ã–µ –º–∞–∫–µ—Ç—ã <br />
                            ‚Ä¢ –ú–∞–∫–µ—Ç—ã –≥–æ—Ä–æ–¥–æ–≤ <br />
                            ‚Ä¢ –ú–æ–¥–µ–ª–∏ —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–∞ <br />
                        </p>
                        <p>
                            ‚Ä¢ –ú–∞–∫–µ—Ç—ã –∫–æ–º–ø–ª–µ–∫—Å–æ–≤ <br />
                            ‚Ä¢ –ú–∞–∫–µ—Ç—ã –∫–æ—Ç—Ç–µ–¥–∂–µ–π <br />
                            ‚Ä¢ –ú–∞–∫–µ—Ç—ã –∫–æ—Ç—Ç–µ–¥–∂–Ω—ã—Ö –ø–æ—Å–µ–ª–∫–æ–≤ <br />
                        </p>
                        <p>
                            ‚Ä¢ –ú–∞–∫–µ—Ç—ã –∏–Ω—Ç–µ—Ä—å–µ—Ä–æ–≤ <br />
                            ‚Ä¢ –ú–∞–∫–µ—Ç—ã –∏–∑ –∫–∞—Ä—Ç–æ–Ω–∞, –ø–µ–Ω–æ–ø–æ–ª–∏—Å—Ç–µ—Ä–æ–ª–∞, <br />
                            –¥–µ—Ä–µ–≤–∞ –∏ —à–ø–æ–Ω–∞, –ø–ª–∞—Å—Ç–∏–∫–∞ <br />
                        </p>
                    </div>
                    <h3>
                        –ê–ª–≥–æ—Ä–∏—Ç–º —Ä–∞–±–æ—Ç—ã
                    </h3>

                    {/* show a different image under 900px width */}
                    <div className="info-img">
                        <picture>
                            <source
                                srcSet={`${import.meta.env.BASE_URL}images/diagram-mobile.png`}
                                media="(max-width: 900px)"
                            />
                            <img
                                src={`${import.meta.env.BASE_URL}images/diagram.png`}
                                alt="diagram"
                            />
                        </picture>
                    </div>

                </div>
            </div>

            {/* WORKS */}

            {/* <div onClick={() => setShowModal(true)}>Open Modal</div> */}
            <div id="works" className="works">
                <div className="works-child">
                    <h3>
                        –ì–∞–ª–µ—Ä–µ—è –º–∞–∫–µ—Ç–æ–≤
                    </h3>

                    <div className="works-img">
                        {(showAllWorks ? worksImages : worksImages.slice(0, 6)).map((work) => (
                            <div key={work.title}>

                                <div className="works-img-child">
                                    <div className="works-img-click">
                                        <img
                                            src={`${import.meta.env.BASE_URL}images/hand-pointer.svg`}
                                            alt="click"
                                            onClick={() => setModalImage(work.title)}
                                        />

                                    </div>

                                    <img
                                        src={`${import.meta.env.BASE_URL}images/gallery/${work.title}_1.webp`}
                                        alt={work.description}
                                        loading="lazy"
                                        onClick={() => setModalImage(work.title)}
                                        className="works-img-child-img"
                                    />
                                </div>

                                <p onClick={() => setModalImage(work.title)}>
                                    {work.description}
                                </p>

                            </div>
                        ))}
                    </div>

                    <button
                        onClick={() => {

                            setShowAllWorks(prev => {
                                if (prev === true) {
                                    // only scroll when collapsing
                                    const worksSection = document.getElementById("works");
                                    if (worksSection) {
                                        worksSection.scrollIntoView({ behavior: "smooth" });
                                    }
                                }
                                return !prev;
                            });

                        }}
                    >
                        {showAllWorks ? "–°–≤–µ—Ä–Ω—É—Ç—å –≥–∞–ª–µ—Ä–µ—é" : "–ü–æ–∫–∞–∑–∞—Ç—å –≤—Å–µ –º–∞–∫–µ—Ç—ã"}
                    </button>
                </div>

            </div>

            {/* ABOUT */}
            <div className="about">

                <div>
                    <h3>
                        –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –º–∞—Å—Ç–µ—Ä—Å–∫–æ–π
                    </h3>

                    <p className="about-child">
                        –ë–æ–ª–µ–µ —á–µ—Ç–≤–µ—Ä—Ç–∏ –≤–µ–∫–∞ –º—ã –∑–∞–Ω–∏–º–∞–µ–º—Å—è –º–∞–∫–µ—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ–º, –º–∞–∫–µ—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ–º –∑–¥–∞–Ω–∏–π,
                        –∫–æ–º–ø–ª–µ–∫—Å–æ–≤, –≥–æ—Ä–æ–¥–æ–≤, –ø–æ—Å—ë–ª–∫–æ–≤, –∏–Ω—Ç–µ—Ä—å–µ—Ä–æ–≤, —Ç–µ—Ö–Ω–∏–∫–∏, –≤—Å–µ–≥–æ, —á—Ç–æ –¥–≤–∏–∂–µ—Ç—Å—è –∏
                        –Ω–µ –¥–≤–∏–∂–µ—Ç—Å—è. –ú—ã –¥–µ–ª–∞–µ–º –º–∞–∫–µ—Ç—ã —Ä–∞–∑–Ω—ã–µ –ø–æ –Ω–∞–∑–Ω–∞—á–µ–Ω–∏—é, –∏–∑ —Ä–∞–∑–Ω—ã—Ö –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤,
                        –∏—Å–ø–æ–ª—å–∑—É–µ–º –Ω–æ–≤–µ–π—à—É—é —Ç–µ—Ö–Ω–∏–∫—É –∏ —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–µ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏. <br />
                        <br />
                        –ú–∞–∫–µ—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ ‚Äî —Ç–≤–æ—Ä—á–µ—Å–∫–∏–π –ø—Ä–æ—Ü–µ—Å—Å. –ú–Ω–æ–≥–æ —Ü–µ–ª–µ–π, –≤–∫—É—Å–æ–≤, —Ç—Ä–µ–±–æ–≤–∞–Ω–∏–π. –°
                        –æ–¥–Ω–æ–π —Å—Ç–æ—Ä–æ–Ω—ã –º–∞–∫–µ—Ç –¥–æ–ª–∂–µ–Ω –ø–æ–º–æ—á—å –∑–∞–∫–∞–∑—á–∏–∫—É –±—ã—Å—Ç—Ä–æ –∏ –Ω–µ–¥–æ—Ä–æ–≥–æ —Ä–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å
                        —Å–≤–æ–∏ –ø–ª–∞–Ω—ã, —Å –¥—Ä—É–≥–æ–π- –±—ã—Ç—å –ª–æ–≥–∏—á–Ω—ã–º, –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–º, –Ω–µ–ø–æ–≤—Ç–æ—Ä–∏–º—ã–º. –ú–∞–∫–µ—Ç –Ω–µ
                        —Ç–æ–ª—å–∫–æ —Ç–æ—á–Ω–∞—è –∫–æ–ø–∏—è –ø—Ä–æ–µ–∫—Ç–∞ –∏ –Ω–∞–±–æ—Ä —Å–ø–µ—Ü—ç—Ñ—Ñ–µ–∫—Ç–æ–≤ ‚Äî —ç—Ç–æ –∂–∏–≤–æ–µ –ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–µ
                        –¥–æ—Å—Ç–æ–π–Ω–æ–µ –≤–Ω–∏–º–∞–Ω–∏—è –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª–∞. –ù–∞—à –æ–ø—ã—Ç –∏ –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–Ω–æ–µ –æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ
                        –ø–æ–∑–≤–æ–ª—è—é—Ç –Ω–µ —Ç–æ–ª—å–∫–æ –º–∞–∫–µ—Ç–∏—Ä–æ–≤–∞—Ç—å, –Ω–æ –∏ –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω–æ –∫–æ—Ä—Ä–µ–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –ø—Ä–æ–µ–∫—Ç—ã. <br />
                        <br />
                        –ú—ã —Å–æ—Ç—Ä—É–¥–Ω–∏—á–∞–µ–º —Å –∞—Ä—Ö–∏—Ç–µ–∫—Ç–æ—Ä–∞–º–∏, –∏–Ω–∂–µ–Ω–µ—Ä–∞–º–∏, –¥–∏–∑–∞–π–Ω–µ—Ä–∞–º–∏, —Ö—É–¥–æ–∂–Ω–∏–∫–∞–º–∏,
                        —Å–∫—É–ª—å–ø—Ç–æ—Ä–∞–º–∏, –ø—Ä–∏–≥–ª–∞—à–∞–µ–º –∫ —Å–æ—Ç—Ä—É–¥–Ω–∏—á–µ—Å—Ç–≤—É –¥—Ä—É–≥–∏–µ –º–∞–∫–µ—Ç–Ω—ã–µ –º–∞—Å—Ç–µ—Ä—Å–∫–∏–µ. <br />
                        <br />
                        –ü—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏ –ø–æ–º–æ–∂–µ–º –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å—Å—è, –ø—Ä–æ–∫–æ–Ω—Å—É–ª—å—Ç–∏—Ä—É–µ–º, –ø–æ—Ä–µ–∫–æ–º–µ–Ω–¥—É–µ–º.
                        –ó–≤–æ–Ω–∏—Ç–µ, –ø–∏—à–∏—Ç–µ, —Å –Ω–∞–º–∏ —É –í–∞—Å –≤—Å—ë –ø–æ–ª—É—á–∏—Ç—Å—è! <br />
                        –°—Ç–æ–∏–º–æ—Å—Ç—å –æ–ø—Ä–µ–¥–µ–ª—è–µ—Ç—Å—è —Ä–∞—Å—á—ë—Ç–æ–º, —Ä–µ–∫–æ–º–µ–Ω–¥–æ–≤–∞–Ω–Ω—ã–º –∫–æ–º–∏—Ç–µ—Ç–æ–º –≥–æ—Ä–æ–¥–∞ –ú–æ—Å–∫–≤—ã
                        –ø–æ —Ü–µ–Ω–æ–≤–æ–π –ø–æ–ª–∏—Ç–∏–∫–µ –≤ —Å—Ç—Ä–æ–∏—Ç–µ–ª—å—Å—Ç–≤–µ –∏ –≥–æ—Å—É–¥–∞—Ä—Å—Ç–≤–µ–Ω–Ω–æ–π —ç–∫—Å–ø–µ—Ä—Ç–∏–∑–µ –ø—Ä–æ–µ–∫—Ç–æ–≤.
                    </p>
                </div>
            </div>

            {/* CLIENTS */}
            <div className="clients">
                <div>
                    <h3>
                        –°—Ä–µ–¥–∏ –Ω–∞—à–∏—Ö –∑–∞–∫–∞–∑—á–∏–∫–æ–≤
                    </h3>
                    <img src={`${import.meta.env.BASE_URL}images/clients.jpg`} alt="clients" loading="lazy" />
                </div>
            </div>

            {/* CONTACTS */}

            <div className="contacts-breakline"></div>
            <div id="contacts" className="contacts">
                <Footer />
            </div>

            {/* MODAL */}
            {modalImage && (
                <button className="modal-close-btn" onClick={closeModalHandler}>
                    ‚úñ
                </button>
            )}

            <Modal
                show={modalImage}
                onCancel={closeModalHandler}
            >
                <div className="modal-works">
                    {images.map((imgName) => (
                        <img
                            key={imgName}
                            src={`${import.meta.env.BASE_URL}images/gallery/${imgName}.webp`}
                            alt={imgName}
                            loading="lazy"
                        />
                    ))}
                </div>
            </Modal>

        </>
    )
};

export default MainPage;